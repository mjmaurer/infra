##########################################################
# Sample .aider.conf.yaml
# This file lists *all* the valid configuration entries.
# Place in your home dir, or at the root of your git repo.
##########################################################
model: "gemini/gemini-2.5-pro"

# editor-model: "claude-3-5-sonnet-latest" # Just used in architect. It's the best at diffs
# editor-edit-format: "editor-diff"

# openai
reasoning-effort: "high"
# anthropic
thinking-tokens: "8k"

file:
  - AI_README.md

read:
  - ~/.config/aider/RULES.md
  - CLAUDE.md
  - AI_README.md

alias:
  - "oo:o1"

  - "oop:o1-preview"
  - "o1p:o1-preview"

  - "o3:o3"
  - "ot:o3"
  - "otm:o3-mini"
  - "o3m:o3-mini"
  - "o4:o4-mini"
  - "of:o4-mini"

  - "dr:deepseek/deepseek-reasoner"

  - "g:gemini/gemini-2.5-pro"
  - "gf:gemini/gemini-2.5-flash"

  - "s5:claude-3-5-sonnet-latest"
  - "sf:claude-3-5-sonnet-latest"

  # Not sure if thinking is actually working or if these are being distinguished
  - "s:claude-3-7-sonnet-latest"
  - "s7:claude-3-7-sonnet-latest"
  - "ss:claude-3-7-sonnet-latest"
  - "ssr:claude-3-7-sonnet-20250219" # See aider-models.conf.yml
  - "s7r:claude-3-7-sonnet-20250219" # See aider-models.conf.yml

auto-accept-architect: false

## Specify a file with aider model settings for unknown models
#model-settings-file: .aider.model.settings.yml

## Specify a file with context window and costs for unknown models
#model-metadata-file: .aider.model.metadata.json

## Verify the SSL cert when connecting to models (default: True)
verify-ssl: true

## Specify what edit format the LLM should use (default depends on model)
#edit-format:

## Specify the model to use for commit messages and chat history summarization (default depends on --model)
#weak-model:

## Only work with models that have meta-data available (default: True)
#show-model-warnings: true

## Max number of tokens to use for repo map, use 0 to disable (default: 1024)
#map-tokens: true

## Maximum number of tokens to use for chat history. If not specified, uses the model's max_chat_history_tokens.
#max-chat-history-tokens:

## Specify the .env file to load (default: .env in git root)
#env-file: .env

################
# History Files:

## Specify the chat input history file (default: .aider.input.history)
input-history-file: .devdata/.aider/.aider.input.history

## Specify the chat history file (default: .aider.chat.history.md)
chat-history-file: .devdata/.aider/.aider.chat.history.md

## Restore the previous chat history messages (default: False)
#restore-chat-history: false

## Log the conversation with the LLM to this file (for example, .aider.llm.history)
llm-history-file: .devdata/.aider/.aider.llm.history

##################
# Output Settings:

## Use colors suitable for a dark terminal background (default: False)
#dark-mode: false

## Use colors suitable for a light terminal background (default: False)
#light-mode: false

## Enable/disable pretty, colorized output (default: True)
#pretty: true

## Enable/disable streaming responses (default: True)
#stream: true

## Set the color for user input (default: #00cc00)
#user-input-color: #00cc00

## Set the color for tool output (default: None)
#tool-output-color:

## Set the color for tool error messages (default: red)
#tool-error-color: #FF2222

## Set the color for assistant output (default: #0088ff)
#assistant-output-color: #0088ff

## Set the markdown code theme (default: default, other options include monokai, solarized-dark, solarized-light)
#code-theme: default

## Show diffs when committing changes (default: False)
#show-diffs: false

## Enable/disable suggesting shell commands (default: True)
suggest-shell-commands: false

#################
# Cache settings:

## Enable caching of prompts (default: False)
cache-prompts: true

## Number of times to ping at 5min intervals to keep prompt cache warm (default: 0)
#cache-keepalive-pings: false

###############
# Git Settings:

## Enable/disable looking for a git repo (default: True)
git: true

## Enable/disable adding .aider* to .gitignore (default: True)
gitignore: false # Done via global gitignore

## Specify the aider ignore file (default: .aiderignore in git root)
# aiderignore: .devdata/.aider/.aiderignore

## Enable/disable auto commit of LLM changes (default: True)
auto-commits: false

## Enable/disable commits when repo is found dirty (default: True)
dirty-commits: false

## Attribute aider code changes in the git author name (default: True)
attribute-author: false

## Attribute aider commits in the git committer name (default: True)
attribute-committer: false

## Prefix commit messages with 'aider: ' (default: False)
# attribute-commit-message: false

## Perform a dry run without modifying files (default: False)
#dry-run: false

########################
# Fixing and committing:

## Commit all pending changes with a suitable commit message, then exit
#commit: false

## Lint and fix provided files, or dirty files if none provided
#lint: false

## Specify lint commands to run for different languages, eg: "python: flake8 --select=..." (can be used multiple times)
#lint-cmd:

## Enable/disable automatic linting after changes (default: True)
auto-lint: false

## Specify command to run tests
#test-cmd:

## Enable/disable automatic testing after changes (default: False)
#auto-test: false

## Run tests and fix problems found
#test: false

#################
# Other Settings:

## Use VI editing mode in the terminal (default: False)
vim: true
## Specify the language for voice using ISO 639-1 code (default: auto)
#voice-language: en

## Show the version number and exit
#version:

## Check for updates and return status in the exit code
#check-update: false

## Skips checking for the update when the program runs
#skip-check-update: false

## Apply the changes from the given file instead of running the chat (debug)
#apply:

## Always say yes to every confirmation
# "yes": false

## Enable verbose output
#verbose: false

## Print the repo map and exit (debug)
#show-repo-map: false

## Print the system prompts and exit (debug)
#show-prompts: false

## Do all startup activities then exit before accepting user input (debug)
#exit: false

## Specify a single message to send the LLM, process reply then exit (disables chat mode)
#message:

## Specify a file containing the message to send the LLM, process reply, then exit (disables chat mode)
#message-file:

## Specify the encoding for input and output (default: utf-8)
#encoding: utf-8

## Specify the config file (default: search for .aider.conf.yml in git root, cwd or home directory)
#config:

## Run aider in your browser
#gui: false

############
# Upgrading:

## Check for updates and return status in the exit code
#just-check-update: false

## Check for new aider versions on launch
check-update: false

## Show release notes on first run of new version (default: None, ask user)
# show-release-notes: true

## Install the latest version from the main branch
#install-main-branch: false

## Upgrade aider to the latest version from PyPI
#upgrade: false

## Show the version number and exit
#version: xxx

############
# Analytics:

## Enable/disable analytics for current session (default: random)
#analytics: xxx

## Specify a file to log analytics events
#analytics-log: xxx

## Permanently disable analytics
analytics-disable: true
