#! /usr/bin/env zsh

# Creates or attaches to a tmux session based on the current/provided directory
# The session name will be the basename of the directory
#
# Usage: tmux_pwd [-w window_name] [directory_path]
#
# Examples:
#   tmux_pwd                     # Creates/attaches session named after current dir
#   tmux_pwd -w dev             # Creates/attaches with window named "dev"
#   tmux_pwd ~/projects/foo     # Creates/attaches session named "foo"
#   tmux_pwd -w dev ~/proj/foo  # Combines both options

while getopts "w:" opt; do
    case $opt in
        w) WINDOW_NAME="$OPTARG" ;;
    esac
done
shift $((OPTIND-1))
DIR_PATH=${1:-$(pwd)}
WINDOW_NAME=${WINDOW_NAME:-"base"}
SESSION_NAME=$(basename $DIR_PATH)
# TODO: Change to $SHELL after moving to nixos
# COMMAND="zsh -c 'if [ -f \"./flake.nix\" ]; then nix develop --command \"zsh\"; elif [ -f \"./shell.nix\" ]; then nix-shell --command \"zsh\"; else zsh; fi'"

echo $SESSION_NAME
# Check if the tmux session exists
if tmux has-session -t $SESSION_NAME 2>/dev/null; then
    echo "Session exists"
    # Check if the window exists
    if ! tmux list-windows -t $SESSION_NAME -F '#W' | grep -q "^${WINDOW_NAME}$"; then
        echo "Creating new window: $WINDOW_NAME"
        tmux new-window -t $SESSION_NAME -n $WINDOW_NAME $SHELL
    else
        echo "Window $WINDOW_NAME already exists"
    fi
else
    echo "Creating new session: $SESSION_NAME"
    tmux new-session -d -s $SESSION_NAME -n $WINDOW_NAME $SHELL
fi
tmux attach-session -t $SESSION_NAME