---

ntp_timezone: Europe/London
local_domain: "gg.{{ domain_me }}"

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases_file: /var/services/homes/alexktz/.bashrc
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml "}
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop"}
  - { alias: "appdata", command: "cd /volume2/appdata" }

# ironicbadger.docker_compose_generator
global_env_vars:
  - "PUID=1026"
  - "PGID=100"
  - "TZ={{ ntp_timezone }}"
appdata_path: /volume2/appdata
docker_compose_generator_output_path: /var/services/homes/alexktz

containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
    volumes:
      - "{{ appdata_path }}/traefik/config:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
  ###
  - service_name: nginxtest
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - "traefik.http.routers.nginxtest.rule=Host(`test.{{ local_domain }}`)"
      - traefik.http.routers.nginxtest.entrypoints=websecure
      - traefik.http.routers.nginxtest.tls.certresolver=cloudflare
    restart: unless-stopped
  ###
  - service_name: minio
    active: true
    image: minio/minio
    labels:
      - traefik.enable=true
      - "traefik.http.routers.minio.rule=Host(`minio.{{ local_domain }}`)"
      - traefik.http.routers.minio.entrypoints=websecure
      - traefik.http.routers.minio.tls.certresolver=cloudflare
    command:
      - server 
      - /data 
      - --address 
      - "0.0.0.0:9000" 
      - --console-address 
      - "0.0.0.0:9001"
    volumes:
      - "/volume1/minio:/data"
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - "MINIO_ROOT_USER={{ elrond_minio_root_user }}"
      - "MINIO_ROOT_PASSWORD={{ elrond_minio_root_password }}"
    restart: unless-stopped
  ###
  - service_name: netdata
    active: false
    image: netdata/netdata
    hostname: "{{ ansible_hostname }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.netdata.rule=Host(`netdata.{{ local_domain }}`)"
      - traefik.http.routers.netdata.entrypoints=websecure
      - traefik.http.routers.netdata.tls.certresolver=cloudflare
      - traefik.http.services.netdata.loadbalancer.server.port=19999
    cap_add:
      - SYS_PTRACE
    volumes:
      - "{{ appdata_path }}/netdata:/etc/netdata"
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
  ###
  - service_name: adguard
    active: false
    image: adguard/adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 3000:3000
      - 8080:8080
    labels:
      - traefik.enable=true
      - "traefik.http.routers.adguard.rule=Host(`adguard.{{ local_domain }}`)"
      - traefik.http.routers.adguard.tls.certresolver=cloudflare
      - traefik.http.services.adguard.loadbalancer.server.port=8080
    volumes:
      - "{{ appdata_path }}/adguardhome/work:/opt/adguardhome/work"
      - "{{ appdata_path }}/adguardhome/config:/opt/adguardhome/conf"
    restart: unless-stopped
  ###
  - service_name: photostructure
    active: false
    image: photostructure/server:stable
    labels:
      - traefik.enable=true
      - "traefik.http.routers.photostructure.rule=Host(`photostructure.{{ local_domain }}`)"
      - traefik.http.routers.photostructure.entrypoints=websecure
      - traefik.http.routers.photostructure.tls.certresolver=cloudflare
      - traefik.http.services.photostructure.loadbalancer.server.port=1787
    volumes:
      - "{{ appdata_path }}/photostructure:/ps/config"
      - /volume2/appdata/photostructure/tmp:/ps/tmp
      - /volume2/appdata/photostructure/logs:/ps/logs
      - /volume1/storage/photos/mum/images:/ps/library
      - /volume1/storage/photos/mum/unsorted:/var/mum/unsorted
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: photoprism
    active: false
    image: photoprism/photoprism:latest
    labels:
      - traefik.enable=true
      - "traefik.http.routers.photoprism.rule=Host(`photoprism.{{ local_domain }}`)"
      - traefik.http.routers.photoprism.tls.certresolver=cloudflare
      - traefik.http.services.photoprism.loadbalancer.server.port=2342
    volumes:
      - "{{ appdata_path }}/photoprism/app:/photoprism/storage" 
      - "/volume1/storage/photos/mum/images:/photoprism/originals/mum/sorted"
    environment:
      - UID=1026
      - GID=100
      - "PHOTOPRISM_ADMIN_PASSWORD={{ container_mysql_root_password }}"     # Initial admin password: PLEASE CHANGE!
      - PHOTOPRISM_DEBUG=false                      # Run in debug mode (shows additional log messages)
      - PHOTOPRISM_READONLY=false                   # Don't modify originals directory (reduced functionality)
      - PHOTOPRISM_SITE_URL="https://photoprism.{{ local_domain }}"  # Canonical / public site URL
      - PHOTOPRISM_SITE_TITLE="PhotoPrism"
      - PHOTOPRISM_SITE_CAPTION="Browse Your Life"
      - PHOTOPRISM_SITE_DESCRIPTION="ktz."
      - PHOTOPRISM_SITE_AUTHOR="ktz"
      - PHOTOPRISM_HTTP_HOST=0.0.0.0
      - PHOTOPRISM_HTTP_PORT=2342
      - PHOTOPRISM_DATABASE_DRIVER=sqlite           # SQLite is an embedded database that doesn't require a server
      #- PHOTOPRISM_DATABASE_DRIVER=mysql          # Use MariaDB (or MySQL) instead of SQLite for improved performance
      # PHOTOPRISM_DATABASE_DSN: "photoprism:insecure@tcp(mariadb:3306)/photoprism?charset=utf8mb4,utf8&parseTime=true"
      - PHOTOPRISM_SIDECAR_JSON=true                # Automatically create JSON sidecar files using Exiftool
      - PHOTOPRISM_SIDECAR_YAML=true                # Automatically backup metadata to YAML sidecar files
      - PHOTOPRISM_THUMB_FILTER=lanczos             # Resample filter, best to worst: blackman, lanczos, cubic, linear
      - PHOTOPRISM_THUMB_UNCACHED=false             # Enable on-demand thumbnail rendering (high memory and cpu usage)
      - PHOTOPRISM_THUMB_SIZE=2048                    # Pre-rendered thumbnail size limit (default 2048, min 720, max 7680)
      - PHOTOPRISM_THUMB_SIZE_UNCACHED=7680           # On-demand rendering size limit (default 7680, min 720, max 7680)
      - PHOTOPRISM_JPEG_SIZE=7680                     # Size limit for converted image files in pixels (720-30000)
      - PHOTOPRISM_JPEG_QUALITY=92                    # Set to 95 for high-quality thumbnails (25-100)
      - PHOTOPRISM_DARKTABLE_PRESETS=false          # Use darktable presets (disables concurrent raw to jpeg conversion)
    restart: unless-stopped
  ###
  - service_name: bookstack
    active: true
    image: linuxserver/bookstack
    depends_on:
      - bookstack_db
    labels:
      - traefik.enable=true
      - "traefik.http.routers.bookstack.rule=Host(`wiki.{{ local_domain }}`)"
      - traefik.http.routers.bookstack.tls.certresolver=cloudflare
    ports:
      - 6875:80
    environment:
      - "APP_URL=https://wiki.{{ local_domain }}"
      - DB_HOST=bookstack_db
      - DB_USER=bookstack
      - "DB_PASS={{ container_mysql_root_password }}"
      - DB_DATABASE=bookstackapp
    volumes:
      - "{{ appdata_path }}/bookstack/config:/config"
    include_global_env_vars: true
    restart: unless-stopped
  - service_name: bookstack_db
    active: true
    image: linuxserver/mariadb
    environment:
      - "MYSQL_ROOT_PASSWORD={{ container_mysql_root_password }}"
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - "MYSQL_PASSWORD={{ container_mysql_root_password }}"
    volumes:
      - "{{ appdata_path }}/bookstack/db:/config"
    include_global_env_vars: true
    restart: unless-stopped


  ###
  # - service_name:
  #   active: false
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.XXXXXXXX.rule=Host(`wiki.{{ local_domain }}`)"
  #     - traefik.http.routers.XXXXXXX.entrypoints=websecure
  #     - traefik.http.routers.XXXXXXX.tls.certresolver=cloudflare
  #     - traefik.http.services.XXXXXXX.loadbalancer.server.port=80
  #     #- traefik.http.routers.XXXXXXX.middlewares=authelia@docker
  #   volumes:
  #     - "{{ appdata_path }}/app:/config"
  #   environment:
  #     -
  #   include_global_env_vars: #optional - defaults to false
  #   restart: unless-stopped
